{
  "name": "cytoscape-cxtmenu",
  "version": "2.6.1",
  "description": "A context menu for Cytoscape.js",
  "main": "cytoscape-cxtmenu.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/cytoscape/cytoscape.js-cxtmenu.git"
  },
  "keywords": [
    "cytoscape",
    "extension",
    "cyext"
  ],
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/cytoscape/cytoscape.js-cxtmenu/issues"
  },
  "homepage": "https://github.com/cytoscape/cytoscape.js-cxtmenu",
  "devDependencies": {
    "gulp": "^3.8.8",
    "gulp-jshint": "^1.8.5",
    "gulp-prompt": "^0.1.1",
    "gulp-replace": "^0.4.0",
    "gulp-shell": "^0.2.9",
    "jshint-stylish": "^1.0.0",
    "run-sequence": "^1.0.0"
  },
  "readme": "cytoscape-cxtmenu\n================================================================================\n\n![Preview](https://raw.githubusercontent.com/cytoscape/cytoscape.js-cxtmenu/master/img/preview.png)\n\n## Description\n\nA context menu for Cytoscape.js\n\nThis plugin creates a widget that lets the user operate circular context menus on nodes in Cytoscape.js.  The user swipes along the circular menu to select a menu item and perform a command on the node of interest.\n\n\n## Dependencies\n\n * Cytoscape.js >= 2.2\n * jQuery >= 1.4\n\n\n## Usage instructions\n\nDownload the library:\n * via npm: `npm install cytoscape-cxtmenu`,\n * via bower: `bower install cytoscape-cxtmenu`, or\n * via direct download in the repository (probably from a tag).\n\n`require()` the library as appropriate for your project:\n\nCommonJS:\n```js\nvar cytoscape = require('cytoscape');\nvar jquery = require('jquery');\nvar cxtmenu = require('cytoscape-cxtmenu');\n\ncxtmenu( cytoscape, jquery ); // register extension\n```\n\nAMD:\n```js\nrequire(['cytoscape', 'cytoscape-cxtmenu', 'jquery'], function( cytoscape, cxtmenu, jquery ){\n  cxtmenu( cytoscape, jquery ); // register extension\n});\n```\n\nNote that `jquery` must point to a jQuery object if any sort of `require()` is used.\n\nPlain HTML/JS has the extension registered for you automatically, because no `require()` is needed.\n\n\n## CSS\n\nYou can style the font of the command text with the `cxtmenu-content` class, and you can style disabled entries with the `cxtmenu-disabled` class.\n\n\n## API\n\nYou initialise the plugin on the same HTML DOM element container used for Cytoscape.js:\n\n```js\n\nvar cy = cytoscape({\n\tcontainer: document.getElementById('cy'),\n\t/* ... */\n});\n\n// the default values of each option are outlined below:\nvar defaults = {\n  menuRadius: 100, // the radius of the circular menu in pixels\n  selector: 'node', // elements matching this Cytoscape.js selector will trigger cxtmenus\n  commands: [ // an array of commands to list in the menu or a function that returns the array\n    /*\n    { // example command\n      fillColor: 'rgba(200, 200, 200, 0.75)', // optional: custom background color for item\n      content: 'a command name' // html/text content to be displayed in the menu\n      select: function(ele){ // a function to execute when the command is selected\n        console.log( ele.id() ) // `ele` holds the reference to the active element\n      }\n    }\n    */\n  ], // function( ele ){ return [ /*...*/ ] }, // example function for commands\n  fillColor: 'rgba(0, 0, 0, 0.75)', // the background colour of the menu\n  activeFillColor: 'rgba(92, 194, 237, 0.75)', // the colour used to indicate the selected command\n  activePadding: 20, // additional size in pixels for the active command\n  indicatorSize: 24, // the size in pixels of the pointer to the active command\n  separatorWidth: 3, // the empty spacing in pixels between successive commands\n  spotlightPadding: 4, // extra spacing in pixels between the element and the spotlight\n  minSpotlightRadius: 24, // the minimum radius in pixels of the spotlight\n  maxSpotlightRadius: 38, // the maximum radius in pixels of the spotlight\n  openMenuEvents: 'cxttapstart taphold', // cytoscape events that will open the menu (space separated)\n  itemColor: 'white', // the colour of text in the command's content\n  itemTextShadowColor: 'black', // the text shadow colour of the command's content\n  zIndex: 9999 // the z-index of the ui div\n};\n\nvar cxtmenuApi = cy.cxtmenu( defaults );\n```\n\nYou get access to the cxtmenu API as the returned value of calling the extension.  You can use this to clean up and destroy the menu instance:\n\n```js\nvar cxtmenuApi = cy.cxtmenu( someOptions );\n\ncxtmenuApi.destroy();\n```\n\n\n## Publishing instructions\n\nThis project is set up to automatically be published to npm and bower.  To publish:\n\n1. Set the version number environment variable: `export VERSION=1.2.3`\n1. Publish: `gulp publish`\n1. If publishing to bower for the first time, you'll need to run `bower register cytoscape-cxtmenu https://github.com/cytoscape/cytoscape.js-cxtmenu.git`\n",
  "readmeFilename": "README.md",
  "_id": "cytoscape-cxtmenu@2.6.1",
  "dist": {
    "shasum": "20d6089fde53889070a61afa4a0e0468aa081335"
  },
  "_from": "cytoscape-cxtmenu@",
  "_resolved": "https://registry.npmjs.org/cytoscape-cxtmenu/-/cytoscape-cxtmenu-2.6.1.tgz"
}
